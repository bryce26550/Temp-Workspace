<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CHAT!!!</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }

        #roomList {
            float: left;
            border: 2px double black;
            height: 100vh;
            width: 200px;
            overflow-y: auto;
            background-color: #fff;
            padding: 10px;
            box-sizing: border-box;
        }

        #roomList button {
            display: block;
            width: 100%;
            padding: 10px;
            margin-bottom: 5px;
            border: none;
            background-color: #f4f4f4;
            cursor: pointer;
        }

        #roomList button.active {
            background-color: #007bff;
            color: #fff;
        }

        #chatBox {
            background-color: #fff;
            margin-left: 220px;
            height: calc(100vh - 60px);
            overflow-y: auto;
            padding: 10px;
            box-sizing: border-box;
            border: 2px solid #ccc;
        }

        #messageBoxContainer {
            display: flex;
            align-items: center;
            position: fixed;
            bottom: 0;
            left: 220px;
            width: calc(100% - 220px);
            background-color: #fff;
            padding: 10px;
            box-sizing: border-box;
            border-top: 2px solid #ccc;
        }

        #messageBox {
            flex: 1;
            padding: 10px;
            border: 2px solid #ccc;
            border-radius: 5px;
            margin-right: 10px;
        }

        #Send {
            padding: 10px 20px;
            border: none;
            background-color: #007bff;
            color: #fff;
            border-radius: 5px;
            cursor: pointer;
        }

        #Send:hover {
            background-color: #0056b3;
        }
    </style>
</head>

<body>
    <div id="roomList">
        <ul>
            Rooms: 
            <li><button onclick="joinRoom('general')">General</button></li>
        </ul>
    </div>
    <div id="chatBox"></div>
    <div id="messageBoxContainer">
        <input type="text" id="messageBox" placeholder="Type your message here...">
        <button id="Send" onclick="sendMessage()">Send</button>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const chatBox = document.getElementById("chatBox");
        const messageBox = document.getElementById("messageBox");
        const roomList = document.getElementById("roomList").querySelector("ul");
        let currentRoom = 'general';

        socket.emit("user_connected", "<%= user %>");

        socket.on("connect", () => {
            joinRoom("general");
        });

        socket.on("message", (data) => {
            console.log("Message received:", data);
            const messageElement = document.createElement("div");
            messageElement.innerHTML = `<strong>${data.user}</strong> [${data.time}] (${data.room}): ${data.message}`;
            chatBox.appendChild(messageElement);
            chatBox.scrollTop = chatBox.scrollHeight;
        });

        socket.on("room_users", (data) => {
            alert(`Users in room ${data.room}: ${data.users.join(", ")}`);
        });

        function sendMessage() {
            const message = messageBox.value;
            const user = "<%= user %>";
            const time = new Date().toLocaleTimeString();

            if (message.startsWith("/join")) {
                const newRoom = message.split(" ")[1];
                joinRoom(newRoom);
            } else if (message.startsWith("/leave")) {
                if (currentRoom !== "general") {
                    joinRoom("general");
                } else {
                    alert("You can't leave general!");
                }
            } else if (message.startsWith("/users")) {
                socket.emit("get_room_users", { room: currentRoom });
            } else {
                console.log("Sending message:", { user, message, time, room: currentRoom });
                socket.emit("message", { user, message, time, room: currentRoom });
            };
            messageBox.value = "";
        }

        function joinRoom(room) {
            socket.emit("join_room", { user: "<%= user %>", room });
            currentRoom = room;
            chatBox.innerHTML = ""; // Clear chat box when switching rooms

            // Update button styles
            const buttons = document.querySelectorAll("#roomList button");
            let roomExists = false;
            buttons.forEach(button => {
                if (button.textContent.toLowerCase() === room.toLowerCase()) {
                    button.classList.add("active");
                    roomExists = true;
                } else {
                    button.classList.remove("active");
                }
            });

            // If the room doesn't exist, create a new button
            if (!roomExists) {
                const newLi = document.createElement("li");
                const newButton = document.createElement("button");
                newButton.textContent = room.charAt(0).toUpperCase() + room.slice(1);
                newButton.onclick = () => joinRoom(room);
                newLi.appendChild(newButton);
                roomList.appendChild(newLi);
                newButton.classList.add("active");
                socket.emit("create_room", { room });
            }
        }

        // Add event listener to messageBox to send message on Enter key press
        messageBox.addEventListener("keydown", function(event) {
            if (event.key === "Enter") {
                sendMessage();
            }
        });

        window.addEventListener("beforeunload", function () {
            socket.emit("user_disconnected", "<%= user %>");
        });
    </script>
</body>

</html>